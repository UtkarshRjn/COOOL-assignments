public class Test extends java.lang.Object
{

    public void <init>()
    {
        Test r0;

        r0 := @this: Test;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        Node $r0, $r2, r5, r6;
        java.lang.String[] r4;

        r4 := @parameter0: java.lang.String[];

        $r0 = new Node;

        specialinvoke $r0.<Node: void <init>()>();

        $r2 = new Node;

        specialinvoke $r2.<Node: void <init>()>();

        if $r0 == null goto label1;

        r5 = $r2.<Node: Node f>;

        goto label2;

     label1:
        r6 = $r2.<Node: Node f>;

     label2:
        return;
    }

    public static Node foo()
    {
        Node $r0, $r2, r4, r5;

        $r0 = new Node;

        specialinvoke $r0.<Node: void <init>()>();

        $r2 = new Node;

        specialinvoke $r2.<Node: void <init>()>();

        if $r0 == null goto label1;

        r4 = $r2.<Node: Node f>;

        goto label2;

     label1:
        r5 = $r2.<Node: Node f>;

     label2:
        return $r0;
    }

    public static void bar(Node, Node)
    {
        Node $r0, r2, $r3, r5, $r6, r7, r8;

        r2 := @parameter0: Node;

        r5 := @parameter1: Node;

        $r0 = new Node;

        specialinvoke $r0.<Node: void <init>()>();

        r2.<Node: Node f> = $r0;

        r7 = staticinvoke <Test: Node baz()>();

        $r3 = new Node;

        specialinvoke $r3.<Node: void <init>()>();

        r7.<Node: Node f> = $r3;

        staticinvoke <Test: Node baz()>();

        r8 = staticinvoke <Test: Node f2(Node)>(r5);

        $r6 = staticinvoke <Test: Node f2(Node)>(r5);

        r8.<Node: Node f> = $r6;

        return;
    }

    public static Node baz()
    {
        Node $r0, $r2, $r3, $r4, r6;

        $r0 = new Node;

        specialinvoke $r0.<Node: void <init>()>();

        $r2 = new Node;

        specialinvoke $r2.<Node: void <init>()>();

        $r0.<Node: Node f> = $r2;

        $r3 = new Node;

        specialinvoke $r3.<Node: void <init>()>();

        r6 = staticinvoke <Test: Node f1(Node)>($r3);

        $r4 = new Node;

        specialinvoke $r4.<Node: void <init>()>();

        r6.<Node: Node f> = $r4;

        return $r0;
    }

    public static Node f1(Node)
    {
        Node $r0, r2;

        r2 := @parameter0: Node;

        $r0 = new Node;

        specialinvoke $r0.<Node: void <init>()>();

        return $r0;
    }

    public static Node f2(Node)
    {
        Node $r0, r2;

        r2 := @parameter0: Node;

        $r0 = new Node;

        specialinvoke $r0.<Node: void <init>()>();

        return $r0;
    }
}
